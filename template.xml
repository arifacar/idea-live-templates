<template name="jackson-config"
          value="@org.springframework.context.annotation.Configuration&#10;public class $configName$Configuration {&#10;&#10;    @org.springframework.context.annotation.Bean&#10;    public com.fasterxml.jackson.databind.ObjectMapper objectMapper() {&#10;        ObjectMapper mapper = new ObjectMapper();&#10;        mapper.configure(com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);&#10;        mapper.configure(com.fasterxml.jackson.databind.MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true);&#10;        mapper.configure(MapperFeature.USE_STD_BEAN_NAMING, true);&#10;        mapper.setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL);&#10;        mapper.configure(com.fasterxml.jackson.databind.SerializationFeature.FAIL_ON_EMPTY_BEANS, false);&#10;        return mapper;&#10;    }&#10;&#10;}"
          description="" toReformat="false" toShortenFQNames="true">
    <variable name="configName" expression="" defaultValue="Jackson" alwaysStopAt="true"/>
    <context>
        <option name="JAVA_CODE" value="true"/>
    </context>
</template>
<template name="java-const" value="private static final int $name$ = $value$;" toReformat="false"
          toShortenFQNames="true">
<variable name="name" expression="" defaultValue="" alwaysStopAt="true"/>
<variable name="value" expression="" defaultValue="" alwaysStopAt="true"/>
<context>
    <option name="JAVA_CODE" value="true"/>
</context>
</template>
<template name="java-validator-class"
          value="public class Validator {&#10;&#10;    public static void validateUser(javax.servlet.http.HttpServletRequest request, $entity$ $entityVariable$) {&#10;        org.springframework.util.Assert.isTrue($entityVariable$ != null, &quot;$entityVariable$ bilgisi boÅŸ olamaz&quot;);&#10;        Assert.isTrue(&quot;$headerAttributeValue$&quot;.equalsIgnoreCase(request.getHeader(&quot;$headerAttributeKey$&quot;)), &quot;$errorMessage$&quot;);&#10;    }&#10;    &#10;}"
          description="" toReformat="false" toShortenFQNames="true">
<variable name="entity" expression="" defaultValue="" alwaysStopAt="true"/>
<variable name="entityVariable" expression="" defaultValue="" alwaysStopAt="true"/>
<variable name="headerAttributeValue" expression="" defaultValue="" alwaysStopAt="true"/>
<variable name="headerAttributeKey" expression="" defaultValue="" alwaysStopAt="true"/>
<variable name="errorMessage" expression="" defaultValue="" alwaysStopAt="true"/>
<context>
    <option name="JAVA_CODE" value="true"/>
</context>
</template>
<template name="jpa-h2-config"
          value="spring.datasource.driver-class-name=org.h2.Driver&#10;spring.datasource.url=jdbc:h2:tcp://localhost:$port$/~/$dbname$;&#10;spring.datasource.username=sa&#10;spring.datasource.password=&#10;spring.jpa.show-sql=true&#10;spring.jpa.generate-ddl=true&#10;spring.jpa.hibernate.ddl-auto=update"
          description="" toReformat="false" toShortenFQNames="true">
<variable name="port" expression="" defaultValue="" alwaysStopAt="true"/>
<variable name="dbname" expression="" defaultValue="" alwaysStopAt="true"/>
<context>
    <option name="JAVA_CODE" value="true"/>
</context>
</template>
<template name="spring-assert-true" value="Assert.isTrue($express$, &quot;$exceptionMessage$&quot;);" description=""
          toReformat="false" toShortenFQNames="true">
<variable name="express" expression="" defaultValue="" alwaysStopAt="true"/>
<variable name="exceptionMessage" expression="" defaultValue="" alwaysStopAt="true"/>
<context>
    <option name="JAVA_CODE" value="true"/>
</context>
</template>
<template name="spring-get-mapping"
          value="@GetMapping(value = &quot;/get$entity$/{$parameter$}&quot;)&#10;public ResponseEntity&lt;$entity$&gt; get$entity$(@PathVariable(&quot;$parameter$&quot;) Long $parameter$) {&#10;    return new ResponseEntity&lt;&gt;(userService.get$entity$($parameter$), HttpStatus.OK);&#10;}"
          description="" toReformat="false" toShortenFQNames="true">
<variable name="entity" expression="" defaultValue="" alwaysStopAt="true"/>
<variable name="parameter" expression="" defaultValue="" alwaysStopAt="true"/>
<context>
    <option name="JAVA_CODE" value="true"/>
</context>
</template>
<template name="spring-jpa-controller"
          value="@org.springframework.web.bind.annotation.RestController&#10;@org.springframework.web.bind.annotation.RequestMapping(&quot;/$endpoint$&quot;)&#10;public class $entity$Controller {&#10;&#10;    private $entity$Service $entityVariable$Service;&#10;&#10;    @org.springframework.beans.factory.annotation.Autowired&#10;    public $entity$Controller($entity$Service $entityVariable$Service) {&#10;        this.$entityVariable$Service = $entityVariable$Service;&#10;    }&#10;&#10;    @RequestMapping(value = &quot;/{page}&quot;)&#10;    public org.springframework.http.ResponseEntity&lt;java.util.List&lt;$entitiy$&gt;&gt; findById(@org.springframework.web.bind.annotation.PathVariable(&quot;page&quot;) int page) {&#10;        return new ResponseEntity&lt;&gt;($entityVariable$Service.findAll(page), org.springframework.http.HttpStatus.OK);&#10;    }&#10;&#10;}"
          description="" toReformat="false" toShortenFQNames="true">
<variable name="endpoint" expression="" defaultValue="" alwaysStopAt="true"/>
<variable name="entity" expression="" defaultValue="" alwaysStopAt="true"/>
<variable name="entityVariable" expression="" defaultValue="" alwaysStopAt="true"/>
<variable name="entitiy" expression="" defaultValue="" alwaysStopAt="true"/>
<context>
    <option name="JAVA_CODE" value="true"/>
</context>
</template>
<template name="spring-jpa-entity-lombok"
          value="@lombok.Data&#10;@lombok.AllArgsConstructor&#10;@lombok.NoArgsConstructor&#10;@javax.persistence.Entity&#10;public class $name$ {&#10;&#10;    @javax.persistence.Id&#10;    @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.IDENTITY)&#10;    private java.lang.Long id;&#10;&#10;    private java.lang.String name;&#10;&#10;}"
          description="Create JPA entity with lombok" toReformat="false" toShortenFQNames="true">
<variable name="name" expression="" defaultValue="" alwaysStopAt="true"/>
<context>
    <option name="JAVA_CODE" value="true"/>
</context>
</template>
<template name="spring-jpa-findall"
          value="org.springframework.data.domain.PageRequest pageRequest = org.springframework.data.domain.PageRequest.of($page$ - 1, $size$);&#10;java.util.List&lt;$entity$&gt; $entityVariable$List = $entityVariable$Repository.findAll(pageRequest).getContent();"
          description="" toReformat="false" toShortenFQNames="true">
<variable name="page" expression="" defaultValue="page" alwaysStopAt="true"/>
<variable name="size" expression="" defaultValue="10" alwaysStopAt="true"/>
<variable name="entity" expression="" defaultValue="" alwaysStopAt="true"/>
<variable name="entityVariable" expression="" defaultValue="" alwaysStopAt="true"/>
<context>
    <option name="JAVA_CODE" value="true"/>
</context>
</template>
<template name="spring-jpa-repository"
          value="public interface $entitiy$Repository extends org.springframework.data.repository.CrudRepository&lt;$entitiy$, Long&gt; {&#10;&#10;    org.springframework.data.domain.Page&lt;$entitiy$&gt; findAll(org.springframework.data.domain.Pageable pageable);&#10;&#10;}"
          description="" toReformat="false" toShortenFQNames="true">
<variable name="entitiy" expression="" defaultValue="User" alwaysStopAt="true"/>
<context>
    <option name="JAVA_CODE" value="true"/>
</context>
</template>
<template name="spring-jpa-service"
          value="@org.springframework.stereotype.Service&#10;public class $entity$Service {&#10;&#10;    private $entity$Repository $entityVariable$Repository;&#10;&#10;    @org.springframework.beans.factory.annotation.Autowired&#10;    public $entity$Service($entity$Repository $entityVariable$Repository) {&#10;        this.$entityVariable$Repository = $entityVariable$Repository;&#10;    }&#10;&#10;    public java.util.List&lt;$entity$&gt; findAll(int page){&#10;        List&lt;$entity$&gt; $entityVariable$List = new java.util.ArrayList&lt;&gt;();&#10;&#10;        return $entityVariable$List;&#10;    }&#10;}"
          description="" toReformat="false" toShortenFQNames="true">
<variable name="entity" expression="" defaultValue="" alwaysStopAt="true"/>
<variable name="entityVariable" expression="" defaultValue="" alwaysStopAt="true"/>
<context>
    <option name="JAVA_CODE" value="true"/>
</context>
</template>
<template name="spring-post-mapping"
          value="@PostMapping(value = &quot;/$method$&quot;)&#10;public ResponseEntity&lt;$entity$&gt; $method$(@RequestBody $entity$ $entityVariable$) {&#10;    return new ResponseEntity&lt;&gt;($serviceName$.$method$($entityVariable$), HttpStatus.OK);&#10;}"
          description="" toReformat="false" toShortenFQNames="true">
<variable name="method" expression="" defaultValue="" alwaysStopAt="true"/>
<variable name="entity" expression="" defaultValue="" alwaysStopAt="true"/>
<variable name="entityVariable" expression="" defaultValue="" alwaysStopAt="true"/>
<variable name="serviceName" expression="" defaultValue="" alwaysStopAt="true"/>
<context>
    <option name="JAVA_CODE" value="true"/>
</context>
</template>